#!/bin/bash
# Author: Shota Kitazawa

OWN_NAME=$0
OPTION=$1

COUNT=0

function echo_metric() {
  case $(basename $OWN_NAME) in
    "ipvsadm_weight")
    echo $1.value $WEIGHT
    ;;
    "ipvsadm_active")
    echo $1.value $ACTIVE
    COUNT=$(expr $COUNT + $ACTIVE)
    ;;
  esac
}

function echo_config() {
  echo "$1.label $1"
  echo "$1.draw LINE"
}


if [ "$OPTION" = "config" ]; then
  case $(basename $OWN_NAME) in
    ipvsadm_active)
      echo "graph_order config active"
      echo "graph_title ipvsadm active connections"
      echo "graph_args --base 1000 -l 0"
      echo "graph_vlabel weight"
      echo "graph_category network"
      echo "graph_info This graph shows the number of active connections"
      ;;
    ipvsadm_weight)
      echo "graph_order config active"
      echo "graph_title ipvsadm weight"
      echo "graph_args --base 1000 -l 0"
      echo "graph_vlabel acctive connections"
      echo "graph_category network"
      echo "graph_info This graph shows the weight of address"
      ;;
  esac
fi

IFS='
'
for STATE in $(ipvsadm -l | egrep -- "->" | tail -n+2); do
  ADDRESS=$(echo $STATE | awk '{print $2}')
  if [[ $ADDRESS =~ ^[0-9] ]]; then
    ADDRESS=$(echo $ADDRESS | sed 's/\./-/g')
  else
    ADDRESS=$(echo $ADDRESS | awk -F "." '{print $1}')
  fi
  WEIGHT=$(echo $STATE | awk '{print $4}')
  ACTIVE=$(echo $STATE | awk '{print $5}')

  if [ "$OPTION" =  "config" ]; then
    echo_config $ADDRESS
  else
    echo_metric $ADDRESS
  fi
done

if [ "$(basename $0)" = "ipvsadm_active" ]; then
  if [ "$OPTION" = "config" ]; then
    echo "sum.label sum"
    echo "sum.draw STACK"
    echo "sum.colour ccff00"
  else
    echo "sum.value $COUNT"
  fi
fi
